{"display_date": "2007/08/28 20:22:14 -0700", "views_count": 361, "short_url": "http://post.ly/AKl1e", "site_id": 1292332, "site": {"subhead": null, "full_hostname": "pita.posterous.com", "name": "Pythonic Introduction to Algorithms", "profile_image_75": "http://files.posterous.com/user_profile_pics/30986/che_baarissa_ilman_paitaa.png", "hostname": "pita", "is_group": false, "time_zone": "Pacific Time (US & Canada)", "current_user_notification_frequency": "", "profile_image_35": "http://files.posterous.com/user_profile_pics/30986/che_baarissa_ilman_paitaa_thumb.png", "comment_permission": 2, "id": 1292332, "sharing_enabled": false, "posts_count": 0, "header_image": null, "is_private": false, "current_user_role": ""}, "likes": [], "allowed": true, "body_full": "<p>Pun intended.</p>\n\n<p>I found two articles on data structures and algorithms which referenced Python.</p>\n\n<p>The first one is the golden oldie, Guido's article about <a href=\"http://www.python.org/doc/essays/graphs.html\" title=\"Python Patterns - Implementing Graphs\">implementing graphs</a> with dicts. I will most likely use this approach as my starting point, although I believe I'll replace adjacency lists with adjacency sets.</p>\n\n<p>The second one is a paper on <a href=\"http://www.ece.uci.edu/~chou/py02/python.html\">algorithm education in Python</a>. Fantastic stuff. I especially liked the following quote:</p>\n<blockquote class=\"posterous_medium_quote\"> We were criticized for trying to make programming \"too soft\" for engineering students, and we were asked \"if C ain't broke, why fix it?\" Our response was that we want to teach <em>problem solving</em> skills, not just <em>programming</em>, and we are confident that Python will be a much more effective way to introduce the fundamental concepts than C.</blockquote>\n<p>I recently had the priviledge of seeing some C-related exams from my <a href=\"http://www.tkk.fi/\">alma mater</a>. A large portion of the questions was focused on some of the hairier parts of the syntax, such as function pointers, very unhygienic macros and so on. I don't think many of the students walk out of that test thinking \"C is a useful tool in solving many everyday problems\". I think they'll be cursing.</p>", "post_image_500": null, "id": 17759451, "twitter_account": "", "title": "Listed links", "media": {"images": [], "audio_files": [], "videos": []}, "comments": [], "body_cleaned": "<p>Pun intended.</p></p><p><p>I found two articles on data structures and algorithms which referenced Python.</p></p><p><p>The first one is the golden oldie, Guido's article about <a href=\"http://www.python.org/doc/essays/graphs.html\" rel=\"nofollow\">implementing graphs</a> with dicts. I will most likely use this approach as my starting point, although I believe I'll replace adjacency lists with adjacency sets.</p></p><p><p>The second one is a paper on <a href=\"http://www.ece.uci.edu/~chou/py02/python.html\" rel=\"nofollow\">algorithm education in Python</a>. Fantastic stuff. I especially liked the following quote:</p>\n<blockquote class=\"posterous_medium_quote\"> We were criticized for trying to make programming \"too soft\" for engineering students, and we were asked \"if C ain't broke, why fix it?\" Our response was that we want to teach <em>problem solving</em> skills, not just <em>programming</em>, and we are confident that Python will be a much more effective way to introduce the fundamental concepts than C.</blockquote>\n<p>I recently had the priviledge of seeing some C-related exams from my <a href=\"http://www.tkk.fi/\" rel=\"nofollow\">alma mater</a>. A large portion of the questions was focused on some of the hairier parts of the syntax, such as function pointers, very unhygienic macros and so on. I don't think many of the students walk out of that test thinking \"C is a useful tool in solving many everyday problems\". I think they'll be cursing.</p>", "draft": false, "full_url": "http://pita.posterous.com/listed-links", "scheduled": false, "tags": [], "body_html": "<p>Pun intended.</p>\n\n<p>I found two articles on data structures and algorithms which referenced Python.</p>\n\n<p>The first one is the golden oldie, Guido's article about <a href=\"http://www.python.org/doc/essays/graphs.html\" title=\"Python Patterns - Implementing Graphs\">implementing graphs</a> with dicts. I will most likely use this approach as my starting point, although I believe I'll replace adjacency lists with adjacency sets.</p>\n\n<p>The second one is a paper on <a href=\"http://www.ece.uci.edu/~chou/py02/python.html\">algorithm education in Python</a>. Fantastic stuff. I especially liked the following quote:</p>\n<blockquote class=\"posterous_medium_quote\"> We were criticized for trying to make programming \"too soft\" for engineering students, and we were asked \"if C ain't broke, why fix it?\" Our response was that we want to teach <em>problem solving</em> skills, not just <em>programming</em>, and we are confident that Python will be a much more effective way to introduce the fundamental concepts than C.</blockquote>\n<p>I recently had the priviledge of seeing some C-related exams from my <a href=\"http://www.tkk.fi/\">alma mater</a>. A large portion of the questions was focused on some of the hairier parts of the syntax, such as function pointers, very unhygienic macros and so on. I don't think many of the students walk out of that test thinking \"C is a useful tool in solving many everyday problems\". I think they'll be cursing.</p>", "locations": [], "user": {"body": "I am much more prolific in Twitter. See http://twitter.com/arsatiki\r\n", "profile_pic": "http://files.posterous.com/user_profile_pics/30986/che_baarissa_ilman_paitaa.png", "display_name": "Antti Rasinen", "firstname": "Antti", "lastname": "Rasinen", "profile_image_35": "http://files.posterous.com/user_profile_pics/30986/che_baarissa_ilman_paitaa_thumb.png", "last_activity": "2012/02/23 08:30:10 -0800", "nickname": "Antti", "id": 29785, "profile_url": "http://posterous.com/users/KPdfsrBQmB"}, "date": "2007-08-29 06:22:14+03:00", "replies_count": 0, "body_excerpt": "Pun intended. I found two articles on data structures and algorithms which referenced Python. The first one is the golden oldie, Guido's article about implementing graphs with dicts. I will most likely use this approach as my starting point, altho...", "slug": "listed-links", "is_private": false, "likes_count": 0, "privatestring": "piicdnCgat", "number_of_comments": 0, "comments_count": 0, "current_member": "", "author_display_name": "Antti Rasinen", "post_image_115": null, "is_owned_by_current_user": null}