{"display_date": "2012/01/22 05:06:00 -0800", "views_count": 157, "short_url": "http://post.ly/51V5D", "site_id": 75592, "site": {"subhead": "Data exploration and computer advice.", "full_hostname": "arsatiki.posterous.com", "name": "The Technical", "profile_image_75": "http://files.posterous.com/user_profile_pics/30986/che_baarissa_ilman_paitaa.png", "hostname": "arsatiki", "is_group": false, "time_zone": "Pacific Time (US & Canada)", "current_user_notification_frequency": "", "profile_image_35": "http://files.posterous.com/user_profile_pics/30986/che_baarissa_ilman_paitaa_thumb.png", "comment_permission": 2, "id": 75592, "sharing_enabled": false, "posts_count": 20, "header_image": null, "is_private": false, "current_user_role": ""}, "likes": [], "allowed": true, "body_full": "<p>Make is a build tool. It was born in 1977, two years before I did. It is mostly used in Unix environments. I think make rocks.</p>\r\n<p />\r\n<div>Redo is another build tool. It was born in 2010, the same year as my kid. There are reports of an earlier sighting. I do not yet know whether redo rocks or not. It has promise.</div>\r\n<p />\r\n<div>The relationship between make and redo is (in the small scale) like that of a figure and ground in the vase and faces illusion. (Image from Wikipedia.)</div>\r\n<p />\r\n<div>\r\n<div style=\"\"><div class='p_embed p_image_embed'>\n<img alt=\"300px-cup_or_faces_paradox\" height=\"364\" src=\"http://getfile5.posterous.com/getfile/files.posterous.com/temp-2012-01-22/GmdzIoBFovesvCmmiwirdpypCiqriCjaFscveevkhxnGGraHiHwAFveDjvws/300px-Cup_or_faces_paradox.svg.png.scaled500.png\" width=\"300\" />\n</div>\n</div>\r\n</div>\r\n<p />\r\n<div>Both tools specify the same build flow. They have to. They must build the dependencies before building the dependents. They specify the build steps as shell commands. The list of executed commands (without parallelism) is close to identical. May even be identical.</div>\r\n<p />\r\n<div>However, make uses a big centralized Makefile. Redo has one file per one target. Of course, targets may be &ldquo;implicit&rdquo; in the make sense; you can use one target to build all .c into .o files.</div>\r\n<p />\r\n<div>This small difference leads to a fascinating phenomenon. If you're more familiar with make, then the redo way seems awkward at first. You're forced to &ldquo;think redo&rdquo; in terms of make. At some point, however, there is a mental flip and redo starts making sense.</div>\r\n<p />\r\n<div>When I reached this point, make no longer made sense. I had to &ldquo;think make&rdquo; in terms of redo. I could not see the vase and the faces at the same time.&nbsp;After a while I've learned to flip to whichever mental view is necessary. Nevertheless, I still can not reason about them at the same time. I don't know whether it is a personal limitation or one shared by all humans.</div>\r\n<p />\r\n<div>I am not advocating for redo or for make here. I love the simple design of redo. I hope something good will come out of it. However, right now, redo is a toddler compared to adult make, agewise. If you are interested in redo, read&nbsp;<a href=\"https://github.com/apenwarr/redo\">the readme in Github</a>. There's a new 0.10 release out.</div>\r\n", "post_image_500": null, "id": 95483109, "twitter_account": "", "title": "Make, redo and the figure-ground illusion", "media": {"images": [{"full": {"username": "Antti", "caption": "Make, redo and the figure-ground illusion", "url": "http://getfile2.posterous.com/getfile/files.posterous.com/temp-2012-01-22/GmdzIoBFovesvCmmiwirdpypCiqriCjaFscveevkhxnGGraHiHwAFveDjvws/300px-Cup_or_faces_paradox.svg.png", "height": 364, "post_id": 95483109, "width": 300, "size": 8}, "media_id": "eIItJiqHxhszlgssxmig", "scaled500": {"username": "Antti", "caption": "Make, redo and the figure-ground illusion", "url": "http://getfile5.posterous.com/getfile/files.posterous.com/temp-2012-01-22/GmdzIoBFovesvCmmiwirdpypCiqriCjaFscveevkhxnGGraHiHwAFveDjvws/300px-Cup_or_faces_paradox.svg.png.scaled500.png", "height": 364, "post_id": 95483109, "width": 300, "size": 8}}], "audio_files": [], "videos": []}, "comments": [], "body_cleaned": "<p>Make is a build tool. It was born in 1977, two years before I did. It is mostly used in Unix environments. I think make rocks.</p></p><p><div>Redo is another build tool. It was born in 2010, the same year as my kid. There are reports of an earlier sighting. I do not yet know whether redo rocks or not. It has promise.</div></p><p><div>The relationship between make and redo is (in the small scale) like that of a figure and ground in the vase and faces illusion. (Image from Wikipedia.)</div></p><p><div>\n<div><span data-type=\"image\" data-full-url=\"http://getfile5.posterous.com/getfile/files.posterous.com/temp-2012-01-22/GmdzIoBFovesvCmmiwirdpypCiqriCjaFscveevkhxnGGraHiHwAFveDjvws/300px-Cup_or_faces_paradox.svg.png.scaled500.png\" data-gallery-id=\"26173881\" data-thumb-url=\"http://getfile0.posterous.com/getfile/files.posterous.com/temp-2012-01-22/GmdzIoBFovesvCmmiwirdpypCiqriCjaFscveevkhxnGGraHiHwAFveDjvws/300px-Cup_or_faces_paradox.svg.png.thumb100.png\" data-gallery-download=\"\" data-id=\"37011871\"></span></div>\n</div></p><p><div>Both tools specify the same build flow. They have to. They must build the dependencies before building the dependents. They specify the build steps as shell commands. The list of executed commands (without parallelism) is close to identical. May even be identical.</div></p><p><div>However, make uses a big centralized Makefile. Redo has one file per one target. Of course, targets may be \u201cimplicit\u201d in the make sense; you can use one target to build all .c into .o files.</div></p><p><div>This small difference leads to a fascinating phenomenon. If you're more familiar with make, then the redo way seems awkward at first. You're forced to \u201cthink redo\u201d in terms of make. At some point, however, there is a mental flip and redo starts making sense.</div></p><p><div>When I reached this point, make no longer made sense. I had to \u201cthink make\u201d in terms of redo. I could not see the vase and the faces at the same time.\u00a0After a while I've learned to flip to whichever mental view is necessary. Nevertheless, I still can not reason about them at the same time. I don't know whether it is a personal limitation or one shared by all humans.</div></p><p><div>I am not advocating for redo or for make here. I love the simple design of redo. I hope something good will come out of it. However, right now, redo is a toddler compared to adult make, agewise. If you are interested in redo, read\u00a0<a href=\"https://github.com/apenwarr/redo\" rel=\"nofollow\">the readme in Github</a>. There's a new 0.10 release out.</div>", "draft": false, "full_url": "http://arsatiki.posterous.com/make-redo-and-the-figure-ground-illusion", "scheduled": false, "tags": [], "body_html": "<p>Make is a build tool. It was born in 1977, two years before I did. It is mostly used in Unix environments. I think make rocks.</p>\r\n<p />\r\n<div>Redo is another build tool. It was born in 2010, the same year as my kid. There are reports of an earlier sighting. I do not yet know whether redo rocks or not. It has promise.</div>\r\n<p />\r\n<div>The relationship between make and redo is (in the small scale) like that of a figure and ground in the vase and faces illusion. (Image from Wikipedia.)</div>\r\n<p />\r\n<div>\r\n<div style=\"\">[[posterous-content:eIItJiqHxhszlgssxmig]]</div>\r\n</div>\r\n<p />\r\n<div>Both tools specify the same build flow. They have to. They must build the dependencies before building the dependents. They specify the build steps as shell commands. The list of executed commands (without parallelism) is close to identical. May even be identical.</div>\r\n<p />\r\n<div>However, make uses a big centralized Makefile. Redo has one file per one target. Of course, targets may be &ldquo;implicit&rdquo; in the make sense; you can use one target to build all .c into .o files.</div>\r\n<p />\r\n<div>This small difference leads to a fascinating phenomenon. If you're more familiar with make, then the redo way seems awkward at first. You're forced to &ldquo;think redo&rdquo; in terms of make. At some point, however, there is a mental flip and redo starts making sense.</div>\r\n<p />\r\n<div>When I reached this point, make no longer made sense. I had to &ldquo;think make&rdquo; in terms of redo. I could not see the vase and the faces at the same time.&nbsp;After a while I've learned to flip to whichever mental view is necessary. Nevertheless, I still can not reason about them at the same time. I don't know whether it is a personal limitation or one shared by all humans.</div>\r\n<p />\r\n<div>I am not advocating for redo or for make here. I love the simple design of redo. I hope something good will come out of it. However, right now, redo is a toddler compared to adult make, agewise. If you are interested in redo, read&nbsp;<a href=\"https://github.com/apenwarr/redo\">the readme in Github</a>. There's a new 0.10 release out.</div>\r\n", "locations": [], "user": {"body": "I am much more prolific in Twitter. See http://twitter.com/arsatiki\r\n", "profile_pic": "http://files.posterous.com/user_profile_pics/30986/che_baarissa_ilman_paitaa.png", "display_name": "Antti Rasinen", "firstname": "Antti", "lastname": "Rasinen", "profile_image_35": "http://files.posterous.com/user_profile_pics/30986/che_baarissa_ilman_paitaa_thumb.png", "last_activity": "2012/02/23 08:30:10 -0800", "nickname": "Antti", "id": 29785, "profile_url": "http://posterous.com/users/KPdfsrBQmB"}, "date": "2012-01-22 15:06:00+02:00", "replies_count": 0, "body_excerpt": "Make is a build tool. It was born in 1977, two years before I did. It is mostly used in Unix environments. I think make rocks. Redo is another build tool. It was born in 2010, the same year as my kid. There are reports of an earlier sighting. I do...", "slug": "make-redo-and-the-figure-ground-illusion", "is_private": false, "likes_count": 0, "privatestring": "ygasxJztcl", "number_of_comments": 0, "comments_count": 0, "current_member": "", "author_display_name": "Antti Rasinen", "post_image_115": "http://getfile8.posterous.com/getfile/files.posterous.com/temp-2012-01-22/GmdzIoBFovesvCmmiwirdpypCiqriCjaFscveevkhxnGGraHiHwAFveDjvws/300px-Cup_or_faces_paradox.svg.png.scaled225.png", "is_owned_by_current_user": null}